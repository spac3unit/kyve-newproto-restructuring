syntax = "proto3";
package KYVENetwork.chain.query;

import "cosmos/base/query/v1beta1/pagination.proto";
import "google/api/annotations.proto";
import "gogoproto/gogo.proto";
import "kyve/query/v1beta1/delegation.proto";



option go_package = "github.com/KYVENetwork/chain/x/query/types";

// QueryDelegation contains all rpc requests related to direct delegation data
service QueryAccount {

  // AccountAssets returns an overview of the sum of all balances for a given user. e.g. balance, staking, funding, etc.
  rpc AccountAssets(QueryAccountAssetsRequest) returns (QueryAccountAssetsResponse) {
    option (google.api.http).get = "/kyve/registry/v1beta1/account_assets/{address}";
  }

  // AccountStakingUnbondings ...
  rpc AccountStakingUnbondings(QueryAccountStakingUnbondingsRequest) returns (QueryAccountStakingUnbondingsResponse) {
    option (google.api.http).get = "/kyve/registry/v1beta1/account_staking_unbondings/{address}";
  }

  // AccountDelegationUnbondings ...
  rpc AccountDelegationUnbondings(QueryAccountDelegationUnbondingsRequest) returns (QueryAccountDelegationUnbondingsResponse) {
    option (google.api.http).get = "/kyve/registry/v1beta1/account_delegation_unbondings/{address}";
  }

  // AccountFundedList returns all pools the given user has funded into.
  rpc AccountFundedList(QueryAccountFundedListRequest) returns (QueryAccountFundedListResponse) {
    option (google.api.http).get = "/kyve/registry/v1beta1/account_funded_list/{address}";
  }

  // AccountRedelegation ...
  rpc AccountRedelegation(QueryAccountRedelegationRequest) returns (QueryAccountRedelegationResponse) {
    option (google.api.http).get = "/kyve/registry/v1beta1/account_redelegation/{address}";
  }

  // AccountStakedList ...
  // TODO still necessary ? user can now just query the staker entry?, this query can then include all pools
//  rpc AccountStakedList(QueryAccountStakedListRequest) returns (QueryAccountStakedListResponse) {
//    option (google.api.http).get = "/kyve/registry/v1beta1/account_staked_list/{address}";
//  }

  // TODO user now just queries kyve/delegation/v1beta1/stakers_by_delegator/{address}
  // AccountDelegationList ...
//  rpc AccountDelegationList(QueryAccountDelegationListRequest) returns (QueryAccountDelegationListResponse) {
//    option (google.api.http).get = "/kyve/registry/v1beta1/account_delegation_list/{address}";
//  }

}


// ========================
// account_assets/{address}
// ========================


// QueryAccountAssetsRequest is the request type for the Query/AccountAssets RPC method.
message QueryAccountAssetsRequest {
  // address ...
  string address = 1;
}

// QueryAccountAssetsResponse is the response type for the Query/AccountAssets RPC method.
message QueryAccountAssetsResponse {
  // balance ...
  uint64 balance = 1;
  // protocol_staking ...
  uint64 protocol_staking = 2;
  // protocol_staking_unbonding
  uint64 protocol_staking_unbonding = 3;
  // protocol_delegation ...
  uint64 protocol_delegation = 4;
  // protocol_delegation_unbonding
  uint64 protocol_delegation_unbonding = 5;
  // protocol_rewards ...
  uint64 protocol_rewards = 6;
  // protocol_funding ...
  uint64 protocol_funding = 7;
}


// ====================================
// account_staking_unbondings/{address}
// ====================================


// QueryAccountFundedListRequest ...
message QueryAccountStakingUnbondingsRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  // address ...
  string address = 2;
}

// QueryAccountAssetsResponse is the response type for the Query/AccountAssets RPC method.
message QueryAccountStakingUnbondingsResponse {
  // balance ...
  repeated StakingUnbonding unbondings = 1 [(gogoproto.nullable) = false];
  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryAccountAssetsResponse is the response type for the Query/AccountAssets RPC method.
message StakingUnbonding {
  // amount
  uint64 amount = 1;
  // creation_time
  uint64 creation_time = 2;
  // pool ... TODO find suitable pool object for these kind of queries
  string pool = 3;
}


// =======================================
// account_delegation_unbondings/{address}
// =======================================


// QueryAccountFundedListRequest ...
message QueryAccountDelegationUnbondingsRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  // address ...
  string address = 2;
}

// QueryAccountAssetsResponse is the response type for the Query/AccountAssets RPC method.
message QueryAccountDelegationUnbondingsResponse {
  // balance ...
  repeated DelegationUnbonding unbondings = 1 [(gogoproto.nullable) = false];
  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryAccountAssetsResponse is the response type for the Query/AccountAssets RPC method.
message DelegationUnbonding {
  // amount
  uint64 amount = 1;
  // creation_time
  uint64 creation_time = 2;
  // creation_time
  DelegationForStakerResponse staker = 3;
  // pool ... TODO find suitable pool object for these kind of queries
  string pool = 4;
}


// =============================
// account_funded_list/{address}
// =============================


// QueryAccountFundedListRequest is the request type for the account queries with pagination
message QueryAccountFundedListRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  // address ...
  string address = 2;
}

// QueryAccountFundedListResponse is the response type for the Query/AccountFundedList RPC method.
message QueryAccountFundedListResponse {
  // funded ...
  repeated Funded funded = 1 [(gogoproto.nullable) = false];
  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// Funded ...
message Funded {
  // account ... // TODO remove account ?
  string account = 1;
  // amount ...
  uint64 amount = 2;
  // pool ... TODO find suitable pool object for these kind of queries
  string pool = 4;
  // TODO include total funding?
}


// ==============================
// account_redelegation/{address}
// ==============================


// QueryAccountDelegationListRequest ...
message QueryAccountRedelegationRequest {
  // address ...
  string address = 1;
}

// QueryAccountDelegationListRequest is the response type for the Query/AccountDelegationList RPC method.
message QueryAccountRedelegationResponse {
  // redelegation_cooldown_entries ...
  repeated uint64 redelegation_cooldown_entries = 1 [(gogoproto.nullable) = false];
}


// =============================
// account_staked_list/{address}
// =============================


//// QueryAccountStakedListRequest ...
//message QueryAccountStakedListRequest {
//  // pagination defines an optional pagination for the request.
//  cosmos.base.query.v1beta1.PageRequest pagination = 1;
//  // address ...
//  string address = 2;
//}
//
//// QueryAccountStakedListResponse is the response type for the Query/StakedList RPC method.
//message QueryAccountStakedListResponse {
//  // staked ...
//  repeated Staked staked = 1 [(gogoproto.nullable) = false];
//  // pagination defines the pagination in the response.
//  cosmos.base.query.v1beta1.PageResponse pagination = 2;
//}
//
//// Staked ...
//message Staked {
//  // staker ...
//  string staker = 1;
//  // pool_id ...
//  uint64 pool_id = 2;
//  // account ...
//  string account = 3;
//  // amount ...
//  uint64 amount = 4;
//  // pool ...
//  kyve.registry.v1beta1.Pool pool = 6;
//  // unbonding_amount ...
//  uint64 unbonding_amount = 7;
//  // upload_probability
//  string upload_probability = 8;
//}


// =============================
// account_staked_list/{address}
// =============================


//// QueryAccountDelegationListRequest ...
//message QueryAccountDelegationListRequest {
//  // pagination defines an optional pagination for the request.
//  cosmos.base.query.v1beta1.PageRequest pagination = 1;
//  // address ...
//  string address = 2;
//}
//
//// QueryAccountDelegationListRequest is the response type for the Query/AccountDelegationList RPC method.
//message QueryAccountDelegationListResponse {
//  // delegations ...
//  repeated kyve.registry.v1beta1.DelegatorResponse delegations = 1 [(gogoproto.nullable) = false];
//  // pagination defines the pagination in the response.
//  cosmos.base.query.v1beta1.PageResponse pagination = 2;
//}
//
//// DelegatorResponse ...
//message DelegatorResponse {
//  // account ...
//  string account = 1;
//  // pool ...
//  kyve.registry.v1beta1.Pool pool = 2;
//  // current_reward ...
//  uint64 current_reward = 3;
//  // delegation_amount ...
//  uint64 delegation_amount = 4;
//  // staker ...
//  string staker = 5;
//  // pending_commission_change
//  PendingCommissionChange pending_commission_change = 6;
//  // delegation_pool_data ...
//  kyve.registry.v1beta1.DelegationPoolData delegation_pool_data = 7;
//}
