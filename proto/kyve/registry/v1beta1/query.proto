syntax = "proto3";

package kyve.registry.v1beta1;

import "cosmos/base/query/v1beta1/pagination.proto";
import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "kyve/registry/v1beta1/registry.proto";

option go_package = "github.com/KYVENetwork/chain/x/registry/types";

// Query defines the gRPC registry querier service.
service Query {
  // WARP

  // ProposalByHeight ...
  rpc ProposalByHeight(QueryProposalByHeightRequest) returns (QueryProposalByHeightResponse) {
    option (google.api.http).get = "/kyve/registry/v1beta1/proposal_by_height/{pool_id}/{height}";
  }

  // ProposalSinceFinalizedAt ...
  rpc ProposalSinceFinalizedAt(QueryProposalSinceFinalizedAtRequest) returns (QueryProposalSinceFinalizedAtResponse) {
    option (google.api.http).get = "/kyve/registry/v1beta1/proposal_since_finalized_at/{pool_id}/{finalized_at}";
  }

  // ProposalSinceId ...
  rpc ProposalSinceId(QueryProposalSinceIdRequest) returns (QueryProposalSinceIdResponse) {
    option (google.api.http).get = "/kyve/registry/v1beta1/proposal_since_id/{pool_id}/{id}";
  }
}

// ######################
// =====    WARP    =====
// ######################

// QueryProposalByHeightRequest is the request type for the Query/ProposalByHeight RPC method.
message QueryProposalByHeightRequest {
  // pool_id ...
  uint64 pool_id = 1;
  // height ...
  uint64 height = 2;
}

// QueryProposalResponse is the response type for the Query/ProposalByHeight RPC method.
message QueryProposalByHeightResponse {
  // proposal ...
  kyve.registry.v1beta1.Proposal proposal = 1 [(gogoproto.nullable) = false];
}

// QueryProposalByFinalizedAtRequest ...
message QueryProposalSinceFinalizedAtRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  // pool_id ...
  uint64 pool_id = 2;
  // height ...
  uint64 finalized_at = 3;
}

// QueryProposalByFinalizedAtResponse ...
message QueryProposalSinceFinalizedAtResponse {
  // proposal ...
  repeated kyve.registry.v1beta1.Proposal proposals = 1 [(gogoproto.nullable) = false];
  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// QueryProposalSinceIdRequest ...
message QueryProposalSinceIdRequest {
  // pagination defines an optional pagination for the request.
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
  // pool_id ...
  uint64 pool_id = 2;
  // height ...
  uint64 id = 3;
}

// QueryProposalSinceIdResponse ...
message QueryProposalSinceIdResponse {
  // proposal ...
  repeated kyve.registry.v1beta1.Proposal proposals = 1 [(gogoproto.nullable) = false];
  // pagination defines the pagination in the response.
  cosmos.base.query.v1beta1.PageResponse pagination = 2;
}
