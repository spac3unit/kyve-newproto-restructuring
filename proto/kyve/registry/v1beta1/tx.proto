syntax = "proto3";

package kyve.registry.v1beta1;

import "gogoproto/gogo.proto";

option go_package = "github.com/KYVENetwork/chain/x/registry/types";

// Msg defines the registry Msg service.
service Msg {
  // (DE)FUNDING

  // FundPool ... -> moved to x/pool
  rpc FundPool(MsgFundPool) returns (MsgFundPoolResponse);
  // DefundPool ... -> moved to x/pool
  rpc DefundPool(MsgDefundPool) returns (MsgDefundPoolResponse);

  // DELEGATION

  // DelegatePool ... -> moved to x/delegation
  rpc DelegatePool(MsgDelegatePool) returns (MsgDelegatePoolResponse);
  // WithdrawPool ... -> moved to x/delegation
  rpc WithdrawPool(MsgWithdrawPool) returns (MsgWithdrawPoolResponse);
  // UndelegatePool ... -> moved to x/delegation
  rpc UndelegatePool(MsgUndelegatePool) returns (MsgUndelegatePoolResponse);
  // RedelegatePool ... -> moved to x/delegation
  rpc RedelegatePool(MsgRedelegatePool) returns (MsgRedelegatePoolResponse);

  // POOL Query for protocol nodes

  // SubmitBundleProposal ...
  rpc SubmitBundleProposal(MsgSubmitBundleProposal) returns (MsgSubmitBundleProposalResponse);
  // VoteProposal ...
  rpc VoteProposal(MsgVoteProposal) returns (MsgVoteProposalResponse);
  // ClaimUploaderRole ...
  rpc ClaimUploaderRole(MsgClaimUploaderRole) returns (MsgClaimUploaderRoleResponse);
}

// (DE)FUNDING

// MsgFundPool defines a SDK message for funding a pool.
message MsgFundPool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id = 2;
  // amount ...
  uint64 amount = 3;
}

// MsgFundPoolResponse defines the Msg/FundPool response type.
message MsgFundPoolResponse {}

// MsgDefundPool defines a SDK message for defunding a pool.
message MsgDefundPool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id = 2;
  // amount ...
  uint64 amount = 3;
}

// MsgDefundPoolResponse defines the Msg/DefundPool response type.
message MsgDefundPoolResponse {}

// DELEGATION

// MsgDelegatePool defines a SDK message for delegating to a protocol node in a specific pool.
message MsgDelegatePool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id = 2;
  // staker ...
  string staker = 3;
  // amount ...
  uint64 amount = 4;
}

// MsgDelegatePoolResponse defines the Msg/DelegatePool response type.
message MsgDelegatePoolResponse {}

// MsgWithdrawPool defines a SDK message for withdrawing delegation rewards from a specific pool.
message MsgWithdrawPool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id = 2;
  // staker ...
  string staker = 3;
}

// MsgWithdrawPoolResponse defines the Msg/WithdrawPool response type.
message MsgWithdrawPoolResponse {}

// MsgUndelegatePool defines a SDK message for undelegating from a specific pool.
message MsgUndelegatePool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id = 2;
  // staker ...
  string staker = 3;
  // amount ...
  uint64 amount = 4;
}

// MsgUndelegatePoolResponse defines the Msg/UndelegatePool response type.
message MsgUndelegatePoolResponse {}

// MsgRedelegatePool defines a SDK message for redelegating from a
// staker in a pool to another staker in the same or another pool
message MsgRedelegatePool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 from_pool_id = 2;
  // staker ...
  string from_staker = 3;
  // id ...
  uint64 to_pool_id = 4;
  // staker ...
  string to_staker = 5;
  // amount ...
  uint64 amount = 6;
}

// MsgUndelegatePoolResponse defines the Msg/UndelegatePool response type.
message MsgRedelegatePoolResponse {}

// POOL

// MsgSubmitBundleProposal defines a SDK message for submitting a bundle proposal.
message MsgSubmitBundleProposal {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id = 2;
  // storage_id ...
  string storage_id = 3;
  // byte_size ...
  uint64 byte_size = 4;
  // from_height
  uint64 from_height = 5;
  // to_height ...
  uint64 to_height = 6;
  // from_key
  string from_key = 7;
  // to_key ...
  string to_key = 8;
  // to_value ...
  string to_value = 9;
  // bundle_hash ...
  string bundle_hash = 10;
}

// MsgSubmitBundleProposalResponse defines the Msg/SubmitBundleProposal response type.
message MsgSubmitBundleProposalResponse {}

// VoteType ...
enum VoteType {
  option (gogoproto.goproto_enum_prefix) = false;

  // VOTE_TYPE_UNSPECIFIED ...
  VOTE_TYPE_UNSPECIFIED = 0;
  // VOTE_TYPE_YES ...
  VOTE_TYPE_YES = 1;
  // VOTE_TYPE_NO ...
  VOTE_TYPE_NO = 2;
  // VOTE_TYPE_ABSTAIN ...
  VOTE_TYPE_ABSTAIN = 3;
}

// MsgVoteProposal defines a SDK message for voting on a bundle proposal.
message MsgVoteProposal {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id = 2;
  // storage_id ...
  string storage_id = 3;
  // vote ...
  VoteType vote = 4;
}

// MsgVoteProposalResponse defines the Msg/VoteProposal response type.
message MsgVoteProposalResponse {}

// MsgClaimUploaderRole defines a SDK message for claiming the uploader role.
message MsgClaimUploaderRole {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id = 2;
}

// MsgClaimUploaderRoleResponse defines the Msg/ClaimUploaderRole response type.
message MsgClaimUploaderRoleResponse {}