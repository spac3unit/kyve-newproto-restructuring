syntax = "proto3";
package kyve.pool.v1beta1;

option go_package = "github.com/KYVENetwork/chain/x/pool/types";

// Msg defines the Msg service.
service Msg {
  // CreatePool ...
  rpc CreatePool(MsgCreatePool) returns (MsgCreatePoolResponse);

  // FundPool ...
  rpc FundPool(MsgFundPool) returns (MsgFundPoolResponse);
  // DefundPool ...
  rpc DefundPool(MsgDefundPool) returns (MsgDefundPoolResponse);

  // TODO: protocol node upgrade plans
}

// MsgCreatePool defines a SDK message for creating a pool.
message MsgCreatePool {
  // creator ...
  string creator = 1;
  // name ...
  string name = 2;
  // runtime ...
  string runtime = 3;
  // logo ...
  string logo = 4;
  // config ...
  string config = 5;
  // start_key ...
  string start_key = 6;
  // upload_interval ...
  uint64 upload_interval = 7;
  // operating_cost ...
  uint64 operating_cost = 8;
  // min_stake ...
  uint64 min_stake = 9;
  // max_bundle_size ...
  uint64 max_bundle_size = 10;
  // version ...
  string version = 11;
  // binaries ...
  string binaries = 12;
}

// MsgCreatePoolResponse defines the Msg/CreatePool response type.
message MsgCreatePoolResponse {}

// MsgFundPool defines a SDK message for funding a pool.
message MsgFundPool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id = 2;
  // amount ...
  uint64 amount = 3;
}

// MsgFundPoolResponse defines the Msg/DefundPool response type.
message MsgFundPoolResponse {}

// MsgDefundPool defines a SDK message for defunding a pool.
message MsgDefundPool {
  // creator ...
  string creator = 1;
  // id ...
  uint64 id = 2;
  // amount ...
  uint64 amount = 3;
}

// MsgDefundPoolResponse defines the Msg/DefundPool response type.
message MsgDefundPoolResponse {}
